{"version":3,"sources":["component/RecipeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["RecipeComponent","recipe","className","src","alt","App","useState","query","setquery","recipes","setrecipes","healthLabel","sethealthLabel","url","a","Axios","get","result","data","hits","console","log","onSubmit","e","preventDefault","getRecipes","type","placeholder","value","onChange","target","onClick","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAYeA,EATS,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACtB,OACI,sBAAKC,UAAU,cAAf,UACI,qBAAKA,UAAU,aAAaC,IAAKF,EAAM,OAAN,MAA2BG,IAAI,KAChE,mBAAGF,UAAU,cAAb,SAA4BD,EAAM,OAAN,YCoDzBI,MAtDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,OAGyBJ,mBAAS,SAHlC,mBAGNK,EAHM,KAGOC,EAHP,KAOTC,EAAG,0CAAsCN,EAAtC,mBAFa,WAEb,oBADc,mCACd,mBAAoGI,GAP9F,4CASb,4BAAAG,EAAA,sEACqBC,IAAMC,IAAIH,GAD/B,OACMI,EADN,OAEEP,EAAWO,EAAOC,KAAKC,MACvBC,QAAQC,IAAIJ,EAAOC,MAHrB,4CATa,sBAoBb,OACE,sBAAKhB,UAAU,MAAf,UACI,oBAAIA,UAAU,YAAd,+BAGA,uBAAMA,UAAU,aAAaoB,SAVlB,SAACC,GAChBA,EAAEC,iBAhBS,mCAiBXC,IAQI,UACE,uBAAOC,KAAK,OAAOC,YAAY,mBAC/BC,MAAOrB,EACPsB,SAAU,SAACN,GAAD,OAAOf,EAASe,EAAEO,OAAOF,UACnC,wBAAQ1B,UAAU,UAAUwB,KAAK,SAASE,MAAM,SAAhD,oBAEA,yBAAQ1B,UAAU,aAAlB,UACE,wBAAQ6B,QAAS,kBAAMnB,EAAe,UAAtC,mBACA,wBAAQmB,QAAS,kBAAMnB,EAAe,eAAtC,wBACA,wBAAQmB,QAAS,kBAAMnB,EAAe,aAAtC,sBACA,wBAAQmB,QAAS,kBAAMnB,EAAe,gBAAtC,yBACA,wBAAQmB,QAAS,kBAAMnB,EAAe,kBAAtC,2BACA,wBAAQmB,QAAS,kBAAMnB,EAAe,cAAtC,uBACA,wBAAQmB,QAAS,kBAAMnB,EAAe,iBAAtC,0BACA,wBAAQmB,QAAS,kBAAMnB,EAAe,eAAtC,wBACA,wBAAQmB,QAAS,kBAAMnB,EAAe,iBAAtC,gCAKJ,qBAAKV,UAAU,aAAf,SACGO,EAAQuB,KAAI,SAAA/B,GACX,OAAO,cAAC,EAAD,CAAiBA,OAAQA,aCxC7BgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d4dbf64a.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./RecipeComponent.css\"\r\n\r\nconst RecipeComponent = ({recipe}) => {\r\n    return (\r\n        <div className=\"recipe-comp\">\r\n            <img className=\"recipe-img\" src={recipe[\"recipe\"][\"image\"]} alt=\"\" />\r\n            <p className=\"recipe-name\">{recipe[\"recipe\"][\"label\"]}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeComponent\r\n","import React,{useState} from 'react';\nimport './App.css';\nimport Axios from \"axios\";\nimport RecipeComponent from './component/RecipeComponent';\n\nfunction App() {\n  const [query, setquery] = useState(\"\");\n  const [recipes, setrecipes] = useState([])\n  const [healthLabel, sethealthLabel] = useState(\"vegan\")\n  \n  const YOUR_APP_ID = \"081a4054\";\n  const YOUR_APP_KEY = \"3e95b25f50aa6f35579aaedb27187b4f\";\n  var url = `https://api.edamam.com/search?q=${query}&app_id=${YOUR_APP_ID}&app_key=${YOUR_APP_KEY}&health=${healthLabel}`\n  \n  async function getRecipes(){\n    var result = await Axios.get(url);\n    setrecipes(result.data.hits)\n    console.log(result.data);\n  }\n\n  const onSubmit = (e) =>{\n    e.preventDefault();\n    getRecipes();\n  }\n\n  return (\n    <div className=\"App\">\n        <h1 className=\"App-title\" >Food Recipe Plaza</h1>\n\n\n        <form className=\"app-search\" onSubmit={onSubmit}>\n          <input type=\"text\" placeholder=\"enter ingridient\" \n          value={query} \n          onChange={(e) => setquery(e.target.value)} />\n          <button className=\"app_btn\" type=\"submit\" value=\"Search\">Search</button>\n\n          <select className=\"app-health\">\n            <option onClick={() => sethealthLabel(\"Vegan\")}>Vegan</option>\n            <option onClick={() => sethealthLabel(\"Vegetarian\")}>Vegetarian</option>\n            <option onClick={() => sethealthLabel(\"Egg-Free\")}>Egg-Free</option>\n            <option onClick={() => sethealthLabel(\"Gluten-Free\")}>Gluten-Free</option>\n            <option onClick={() => sethealthLabel(\"Keto-Friendly\")}>Keto-Friendly</option>\n            <option onClick={() => sethealthLabel(\"Fish-Free\")}>Fish-Free</option>\n            <option onClick={() => sethealthLabel(\"Alcohol-Free\")}>Alcohol-Free</option>\n            <option onClick={() => sethealthLabel(\"Dairy-Free\")}>Dairy-Free</option>\n            <option onClick={() => sethealthLabel(\"Mustard-Free\")}>Mustard-Free</option>\n          </select>\n        </form>\n\n\n        <div className=\"app-recipe\">\n          {recipes.map(recipe =>{\n            return <RecipeComponent recipe={recipe}/>\n          })}\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}